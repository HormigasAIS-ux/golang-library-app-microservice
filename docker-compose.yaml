version: '3.8'

services:
  backend_syn_db:
    image: postgres:13
    container_name: backend_syn_db
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - my_network
    env_file:
      - .env

  syn_auth_service_rest:
    image: ${AUTH_SERVICE_IMAGE}
    container_name: syn_auth_service_rest
    command: ["./auth_service", "--server=rest", , "--seed=user"]
    ports:
      - "8001:8001"
    networks:
      - my_network
    env_file:
      - ./auth_service/.env
    depends_on:
      - backend_syn_db

  syn_auth_service_grpc:
    image: ${AUTH_SERVICE_IMAGE}
    container_name: syn_auth_service_grpc
    command: ["./auth_service", "--server=grpc"]
    ports:
      - "7001:7001"
    networks:
      - my_network
    env_file:
      - ./auth_service/.env
    depends_on:
      - backend_syn_db

  syn_author_service_rest:
    image: ${AUTHOR_SERVICE_IMAGE}
    container_name: syn_author_service_rest
    command: ["./author_service", "--server=rest"]
    ports:
      - "8002:8002"
    networks:
      - my_network
    env_file:
      - ./auth_service/.env
    depends_on:
      - backend_syn_db

  syn_author_service_grpc:
    image: ${AUTHOR_SERVICE_IMAGE}
    container_name: syn_author_service_grpc
    command: ["./author_service", "--server=grpc"]
    ports:
      - "7002:7002"
    networks:
      - my_network
    env_file:
      - ./auth_service/.env
    depends_on:
      - backend_syn_db

volumes:
  postgres_data:

networks:
  my_network:
    driver: bridge